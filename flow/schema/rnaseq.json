{
    "inputs": {
        "sample_options": {
            "name": "Sample options",
            "description": "Parameters relating to the sample being analysed.",
            "properties": {
                "input": {
                    "name": "Sample",
                    "type": "sample",
                    "pattern": "csv|xlsx",
                    "required": true,
                    "description": "The sample to process.",
                    "csv": {
                        "sample": "name",
                        "fastq_1": "input.1",
                        "fastq_2": "input.2",
                        "strandedness": "strandedness"
                    }
                }
            }
        },
        "genome_options": {
            "name": "Genome options",
            "description": "The genome being aligned to.",
            "takes_genome": true,
            "properties": {
                "fasta": {
                    "name": "FASTA",
                    "type": "file",
                    "pattern": "fasta|fa$",
                    "required": true,
                    "genome_file": "fasta",
                    "description": "A raw genome FASTA file."
                },
                "gtf": {
                    "name": "GTF",
                    "type": "file",
                    "pattern": "gtf",
                    "required": true,
                    "genome_file": "gtf",
                    "description": "An annotation for the genome."
                },
                "gene_bed": {
                    "name": "BED",
                    "type": "file",
                    "pattern": "bed",
                    "required": false,
                    "genome_output": {
                        "process": "GTF2BED",
                        "filetype": "bed"
                    },
                    "description": "BED file containing gene intervals. This will be created from the GTF file if not specified."
                },
                "transcript_fasta": {
                    "name": "Transcript FASTA",
                    "type": "file",
                    "pattern": "fasta|fa$",
                    "required": false,
                    "genome_output": {
                        "process": "MAKE_TRANSCRIPTS_FASTA",
                        "filetype": "fa"
                    },
                    "description": "FASTA transcriptome file - generated from the main FASTA if not provided."
                },
                "star_index": {
                    "name": "STAR Index",
                    "type": "file",
                    "pattern": "",
                    "required": false,
                    "genome_output": {
                        "process": "STAR_GENOMEGENERATE",
                        "filetype": ""
                    },
                    "description": "A genome index built with STAR."
                },
                "rsem_index": {
                    "name": "RSEM Index",
                    "type": "file",
                    "pattern": "",
                    "required": false,
                    "genome_output": {
                        "process": "RSEM_PREPAREREFERENCE_GENOME",
                        "filetype": ""
                    },
                    "description": "A genome index built with RSEM."
                },
                "splicesites": {
                    "name": "Splicesites",
                    "type": "file",
                    "pattern": "txt",
                    "required": false,
                    "genome_output": {
                        "process": "HISAT2_EXTRACTSPLICESITES",
                        "filetype": "txt"
                    },
                    "description": "Splicesites needed for HISAT2 processing."
                },
                "hisat2_index": {
                    "name": "HISAT2 Index",
                    "type": "file",
                    "pattern": "",
                    "required": false,
                    "genome_output": {
                        "process": "HISAT2_BUILD",
                        "filetype": ""
                    },
                    "description": "A genome index built with HISAT2."
                },
                "salmon_index": {
                    "name": "Salmon Index",
                    "type": "file",
                    "pattern": "",
                    "required": false,
                    "genome_output": {
                        "process": "SALMON_INDEX",
                        "filetype": ""
                    },
                    "description": "A genome index built with Salmon."
                }
            }
        }
    },
    "umi_options": {
        "name": "UMI Settings",
        "description": "Additional config",
        "properties": {
            "with_umi": {
                "name": "Deduplicate based on UMIs",
                "description": "Enable UMI-based read deduplication.",
                "type": "boolean",
                "default": false
            },
            "skip_umi_extract": {
                "name": "Skip UMI Extraction",
                "description": "Skip the UMI extraction from the read in case the UMIs have been moved to the headers in advance of the pipeline run.",
                "type": "boolean"
            },
            "umitools_extract_method": {
                "name": "Type of UMI pattern",
                "description": "UMI pattern to use. Can be either 'string' (default) or 'regex'.",
                "type": "string"
            },
            "umitools_dedup_stats": {
                "name": "UMI Tools dedupe stats",
                "description": "Generate output stats when running 'umi_tools dedup'.",
                "type": "boolean"
            },
            "umitools_bc_pattern": {
                "name": "UMI Tools read 1 barcode pattern",
                "description": "The UMI barcode pattern to use if the UMI is on read 1 e.g. 'NNNNNN' indicates that the first 6 nucleotides of the read are from the UMI.",
                "type": "string"
            },
            "umitools_bc_pattern2": {
                "name": "UMI Tools read 2 barcode pattern",
                "description": "The UMI barcode pattern to use if the UMI is on read 2 e.g. 'NNNNNN' indicates that the first 6 nucleotides of the read are from the UMI.",
                "type": "string"
            },
            "umi_discard_read": {
                "name": "Discard reads",
                "description": "After UMI barcode extraction discard either R1 or R2 by setting this parameter to 1 or 2, respectively.",
                "type": "number"
            },
            "save_umi_intermeds": {
                "name": "Save UMI Tools intermediates",
                "description": "If this option is specified, intermediate FastQ and BAM files produced by UMI-tools are also saved in the results directory.",
                "type": "boolean"
            }
        }
    },

    "outputs": [
        {
            "name": "STAR Alignments",
            "description": "Some alignments created by STAR. These are important for reason X.",
            "filetype": "bam",
            "process": "STAR_ALIGN_IGENOMES"
        },
        {
            "name": "RDS Files",
            "description": "An important file output from a Salmon process.",
            "filetype": "rds",
            "process": "SALMON_SE_GENE"
        }
    ]
}